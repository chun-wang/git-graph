// Generated by CoffeeScript 1.9.1
(function() {
  this.ContributorsStatGraph = (function() {
    function ContributorsStatGraph() {}

    ContributorsStatGraph.prototype.init = function(log) {
      var author_commits, total_commits;
      this.parsed_log = ContributorsStatGraphUtil.parse_log(log);
      this.set_current_field("commits");
      total_commits = ContributorsStatGraphUtil.get_total_data(this.parsed_log, this.field);
      author_commits = ContributorsStatGraphUtil.get_author_data(this.parsed_log, this.field);
      this.add_master_graph(total_commits);
      this.add_authors_graph(author_commits);
      return this.change_date_header();
    };

    ContributorsStatGraph.prototype.add_master_graph = function(total_data) {
      this.master_graph = new ContributorsMasterGraph(total_data);
      return this.master_graph.draw();
    };

    ContributorsStatGraph.prototype.add_authors_graph = function(author_data) {
      var limited_author_data, _this;
      _this = this;
      this.authors = [];
      limited_author_data = author_data.slice(0, 100);
      return _.each(limited_author_data, function(d, index) {
          var author_graph, author_header;
          author_header = _this.create_author_header(d, index);
          $(".contributors-list").append(author_header);
          _this.authors[d.author_name] = author_graph = new ContributorsAuthorGraph(d.dates);
          return author_graph.draw();
      });
    };

    ContributorsStatGraph.prototype.format_author_commit_info = function(author) {
      var commit_meta, commits, commit_additions, commit_deletions, slash;
      commit_meta = $('<span/>', {
        "class": 'cmeta'
      });

      commits = $("<a href='' class='cmt'>"+author.commits+" commit</a>");

      commit_additions = $("<span class='a'>"+author.additions+" ++</span>");

      commit_deletions = $("<span class='d'>"+author.deletions+" --</span>");

      slash = " / ";

      commit_meta.append(commits);
      commit_meta.append(slash);
      commit_meta.append(commit_additions);
      commit_meta.append(slash);
      
      return commit_meta.append(commit_deletions);;
    };

    ContributorsStatGraph.prototype.format_author_meta_info = function(author) {
      var author_meta, commits_meta;
      author_meta = $('<span/>', {
        "class": 'ameta'
      });
      
      commits_meta = this.format_author_commit_info(author);
      return author_meta.append(commits_meta);
    };

    ContributorsStatGraph.prototype.format_author_rank_info = function(author, rank) {
      var author_rank;
      author_rank = $('<span/>', {
        "class": 'rank'
      });

      author_rank.text("#"+(rank+1));
      
      return author_rank;
    };

    ContributorsStatGraph.prototype.create_author_header = function(author, rank) {
      var title, author_avatar, author_rank, author_name, list_item, author_meta;
      list_item = $('<li/>', {
        "class": 'person capped-card',
        style: 'display: block;'
      });

      title = $("<h3/>");
      author_avatar = $("<img src='"+author.author_avatar+"' alt='' / class='avatar'>");
      author_rank = this.format_author_rank_info(author, rank);
      author_name = $("<a class='aname' href=''>"+author.author_name+"</a>");
      author_meta = this.format_author_meta_info(author);

      title.append(author_avatar);
      title.append(author_rank);
      title.append(author_name);
      title.append(author_meta);

      return list_item.append(title);
    };

    ContributorsStatGraph.prototype.redraw_master = function() {
      var total_data;
      total_data = ContributorsStatGraphUtil.get_total_data(this.parsed_log, this.field);
      this.master_graph.set_data(total_data);
      return this.master_graph.redraw();
    };

    ContributorsStatGraph.prototype.redraw_authors = function() {
      var author_commits, x_domain, _this;
      _this = this;
      $("ol").html("");
      x_domain = ContributorsGraph.prototype.x_domain;
      author_commits = ContributorsStatGraphUtil.get_author_data(this.parsed_log, this.field, x_domain);
      return _.each(author_commits, function(d, index) {
          _this.redraw_author_commit_info(d, index);
          $(_this.authors[d.author_name].list_item).appendTo("ol");
          _this.authors[d.author_name].set_data(d.dates);
          return _this.authors[d.author_name].redraw();
      });
    };

    ContributorsStatGraph.prototype.set_current_field = function(field) {
      return this.field = field;
    };

    ContributorsStatGraph.prototype.change_date_header = function() {
      var print, print_date_format, x_domain;
      x_domain = ContributorsGraph.prototype.x_domain;
      print_date_format = d3.time.format("%B %e %Y");
      print = print_date_format(x_domain[0]) + " - " + print_date_format(x_domain[1]);
      return $("#date_header").text(print);
    };

    ContributorsStatGraph.prototype.redraw_author_commit_info = function(author, rank) {
      var author_commit_info, author_list_item, author_rank;
      author_list_item = $(this.authors[author.author_name].list_item);
      author_commit_info = this.format_author_commit_info(author);
      author_rank = this.format_author_rank_info(author, rank);

      author_list_item.find(".cmeta").html(author_commit_info);

      var rankitem = author_list_item.find("rank")
      author_list_item.find(".rank").html(author_rank)

      return author_list_item;
    };

    return ContributorsStatGraph;

  })();

}).call(this);
